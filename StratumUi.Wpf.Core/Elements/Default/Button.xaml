<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:Arion.Style.AttachedProperties"
    xmlns:attachedProperties="clr-namespace:StratumUi.Wpf.Core.AttachedProperties"
    xmlns:controls1="clr-namespace:StratumUi.Wpf.Core.Controls"
    xmlns:converters="clr-namespace:Arion.Style.Converters"
    xmlns:converters1="clr-namespace:StratumUi.Wpf.Core.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FontFamily.xaml" />
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="ProgressBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters1:ButtonProgressBarWidthConverter x:Key="ProgressBarWidthConverter" />
    <converters1:ButtonIconVisibilityConverter x:Key="IconConverter" />
    <converters1:BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <Style x:Key="BtnFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        Name="Focus"
                        Margin="-3"
                        BorderBrush="{StaticResource Pr300}"
                        BorderThickness="4"
                        CornerRadius="6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="FilledTemplate" TargetType="{x:Type Button}">
        <Border
            Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding attachedProperties:Hint.CornerRadius}">
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls1:Icon
                    Grid.Column="0"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    Margin="0,0,8,0"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.LeftIcon}"
                    Stroke="{TemplateBinding attachedProperties:Button.IconStrokeThickness}"
                    StrokeColor="{TemplateBinding attachedProperties:Button.IconStrokeColor}"
                    Visibility="{TemplateBinding attachedProperties:Button.LeftIcon,
                                                 Converter={StaticResource IconConverter}}" />
                <ContentPresenter
                    Grid.Column="1"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextElement.Foreground="{TemplateBinding Foreground}" />
                <controls1:Icon
                    x:Name="Icon"
                    Grid.Column="1"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.Icon}"
                    Stroke="{TemplateBinding attachedProperties:Button.IconStrokeThickness}"
                    StrokeColor="{TemplateBinding attachedProperties:Button.IconStrokeColor}"
                    Visibility="{TemplateBinding attachedProperties:Button.Icon,
                                                 Converter={StaticResource IconConverter}}" />
                <controls1:Icon
                    Grid.Column="2"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    Margin="8,0,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.RightIcon}"
                    Stroke="{TemplateBinding attachedProperties:Button.IconStrokeThickness}"
                    StrokeColor="{TemplateBinding attachedProperties:Button.IconStrokeColor}"
                    Visibility="{TemplateBinding attachedProperties:Button.RightIcon,
                                                 Converter={StaticResource IconConverter}}" />
                <ProgressBar
                    x:Name="ProgressBar"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Width="{TemplateBinding Width,
                                            Converter={StaticResource ProgressBarWidthConverter}}"
                    Maximum="{TemplateBinding attachedProperties:Button.ProgressBarMaximum}"
                    Minimum="{TemplateBinding attachedProperties:Button.ProgressBarMinimum}"
                    Style="{StaticResource BtnCircleProgressBar}"
                    Visibility="{TemplateBinding attachedProperties:Button.ProgressBarShow,
                                                 Converter={StaticResource VisibilityConverter}}"
                    Value="{TemplateBinding attachedProperties:Button.ProgressBarValue}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Pr600}" />
                <Setter Property="Background" Value="{StaticResource Pr600}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Pr700}" />
                <Setter Property="BorderBrush" Value="{StaticResource Pr700}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarShow" Value="True">
                <Setter Property="Background" Value="{StaticResource Pr100}" />
                <Setter Property="Padding" Value="12" />
                <Setter Property="MinWidth" Value="40" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarType" Value="Circle">
                <Setter TargetName="ProgressBar" Property="Style" Value="{StaticResource BtnCircleProgressBar}" />
                <Setter TargetName="ProgressBar" Property="Width" Value="16" />
                <Setter TargetName="ProgressBar" Property="Height" Value="16" />
                <Setter Property="Padding" Value="5" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarType" Value="Linear">
                <Setter TargetName="ProgressBar" Property="Style" Value="{StaticResource BtnProgressBar}" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="First">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="6,0,0,6" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="Middle">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="0" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="Last">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="0,6,6,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="OutlineTemplate" TargetType="{x:Type Button}">
        <Border
            Name="Border"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding attachedProperties:Hint.CornerRadius}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls1:Icon
                    Grid.Column="0"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    Margin="0,0,8,0"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.LeftIcon}"
                    Visibility="{TemplateBinding attachedProperties:Button.LeftIcon,
                                                 Converter={StaticResource IconConverter}}" />
                <ContentPresenter
                    Grid.Column="1"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextElement.Foreground="{TemplateBinding Foreground}" />
                <controls1:Icon
                    x:Name="Icon"
                    Grid.Column="1"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.Icon}"
                    Visibility="{TemplateBinding attachedProperties:Button.Icon,
                                                 Converter={StaticResource IconConverter}}" />
                <controls1:Icon
                    Grid.Column="2"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    Margin="8,0,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.RightIcon}"
                    Visibility="{TemplateBinding attachedProperties:Button.RightIcon,
                                                 Converter={StaticResource IconConverter}}" />
                <ProgressBar
                    x:Name="ProgressBar"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Width="{TemplateBinding Width,
                                            Converter={StaticResource ProgressBarWidthConverter}}"
                    Maximum="{TemplateBinding attachedProperties:Button.ProgressBarMaximum}"
                    Minimum="{TemplateBinding attachedProperties:Button.ProgressBarMinimum}"
                    Style="{StaticResource BtnCircleProgressBar}"
                    Visibility="{TemplateBinding attachedProperties:Button.ProgressBarShow,
                                                 Converter={StaticResource VisibilityConverter}}"
                    Value="{TemplateBinding attachedProperties:Button.ProgressBarValue}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Lg2}" />
                <Setter Property="Background" Value="{StaticResource Lg5}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Lg3}" />
                <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarShow" Value="True">
                <Setter Property="Padding" Value="12" />
                <Setter Property="MinWidth" Value="40" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarType" Value="Circle">
                <Setter TargetName="ProgressBar" Property="Style" Value="{StaticResource BtnCircleProgressBar}" />
                <Setter TargetName="ProgressBar" Property="Width" Value="16" />
                <Setter TargetName="ProgressBar" Property="Height" Value="16" />
                <Setter Property="Padding" Value="5" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarType" Value="Linear">
                <Setter TargetName="ProgressBar" Property="Style" Value="{StaticResource BtnProgressBar}" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="First">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="6,0,0,6" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="Middle">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="0" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="Last">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="0,6,6,0" />
            </Trigger>

            <!-- <Trigger Property="IsFocused" Value="True"> -->
            <!--     <Setter Property="Visibility" TargetName="Focus" Value="Visible" /> -->
            <!-- </Trigger> -->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TextTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Border
                Name="Border"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding attachedProperties:Hint.CornerRadius}"
                Opacity="0" />
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls1:Icon
                    Grid.Column="0"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    Margin="0,0,8,0"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.LeftIcon}"
                    Visibility="{TemplateBinding attachedProperties:Button.LeftIcon,
                                                 Converter={StaticResource IconConverter}}" />
                <ContentPresenter
                    Grid.Column="1"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    TextElement.Foreground="{TemplateBinding Foreground}" />
                <controls1:Icon
                    x:Name="Icon"
                    Grid.Column="1"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.Icon}"
                    Visibility="{TemplateBinding attachedProperties:Button.Icon,
                                                 Converter={StaticResource IconConverter}}" />
                <controls1:Icon
                    Grid.Column="2"
                    Width="{TemplateBinding attachedProperties:Button.IconWidth}"
                    Height="{TemplateBinding attachedProperties:Button.IconHeight}"
                    Margin="8,0,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Kind="{TemplateBinding attachedProperties:Button.RightIcon}"
                    Visibility="{TemplateBinding attachedProperties:Button.RightIcon,
                                                 Converter={StaticResource IconConverter}}" />
                <ProgressBar
                    x:Name="ProgressBar"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Width="{TemplateBinding Width,
                                            Converter={StaticResource ProgressBarWidthConverter}}"
                    Maximum="{TemplateBinding attachedProperties:Button.ProgressBarMaximum}"
                    Minimum="{TemplateBinding attachedProperties:Button.ProgressBarMinimum}"
                    Style="{StaticResource BtnCircleProgressBar}"
                    Visibility="{TemplateBinding attachedProperties:Button.ProgressBarShow,
                                                 Converter={StaticResource VisibilityConverter}}"
                    Value="{TemplateBinding attachedProperties:Button.ProgressBarValue}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Opacity" Value=".04" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Opacity" Value=".1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarShow" Value="True">
                <Setter Property="Padding" Value="12" />
                <Setter Property="MinWidth" Value="40" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarType" Value="Circle">
                <Setter TargetName="ProgressBar" Property="Style" Value="{StaticResource BtnCircleProgressBar}" />
                <Setter TargetName="ProgressBar" Property="Width" Value="16" />
                <Setter TargetName="ProgressBar" Property="Height" Value="16" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.ProgressBarType" Value="Linear">
                <Setter TargetName="ProgressBar" Property="Style" Value="{StaticResource BtnProgressBar}" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="First">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="6,0,0,6" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="Middle">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="0" />
            </Trigger>
            <Trigger Property="attachedProperties:Button.Position" Value="Last">
                <Setter Property="attachedProperties:Hint.CornerRadius" Value="0,6,6,0" />
            </Trigger>

            <!-- <Trigger Property="IsFocused" Value="True"> -->
            <!--     <Setter Property="Visibility" TargetName="Focus" Value="Visible" /> -->
            <!-- </Trigger> -->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BtnBase" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="attachedProperties:Button.IconHeight" Value="15" />
        <Setter Property="attachedProperties:Button.IconWidth" Value="15" />
        <Setter Property="attachedProperties:Hint.CornerRadius" Value="6" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource BtnFocusVisual}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style
        x:Key="BtnFilled"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource Pr500}" />
        <Setter Property="BorderBrush" Value="{StaticResource Pr500}" />
        <Setter Property="Template" Value="{StaticResource FilledTemplate}" />
    </Style>
    <Style
        x:Key="BtnOutline"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Dg2}" />
        <Setter Property="Background" Value="{StaticResource CleanW}" />
        <Setter Property="BorderBrush" Value="{StaticResource Lg2}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource OutlineTemplate}" />
    </Style>
    <Style
        x:Key="BtnText"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Dg2}" />
        <Setter Property="Background" Value="#002D46" />
        <Setter Property="BorderBrush" Value="#002D46" />
        <Setter Property="Template" Value="{StaticResource TextTemplate}" />
    </Style>

    <!--  Inline alert buttons  -->

    <Style
        x:Key="InlineAlertInfoPrimary"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource Pr500}" />
        <Setter Property="BorderBrush" Value="{StaticResource Pr500}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Pr600}" />
                            <Setter Property="Background" Value="{StaticResource Pr600}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Pr700}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Pr700}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="InlineAlertDangerPrimary"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource R500}" />
        <Setter Property="BorderBrush" Value="{StaticResource R500}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource R600}" />
                            <Setter Property="Background" Value="{StaticResource R600}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource R700}" />
                            <Setter Property="BorderBrush" Value="{StaticResource R700}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="InlineAlertWarningPrimary"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource Y500}" />
        <Setter Property="BorderBrush" Value="{StaticResource Y500}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Y600}" />
                            <Setter Property="Background" Value="{StaticResource Y600}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Y700}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Y700}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="InlineAlertSuccessPrimary"
        BasedOn="{StaticResource BtnBase}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource G500}" />
        <Setter Property="BorderBrush" Value="{StaticResource G500}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource G600}" />
                            <Setter Property="Background" Value="{StaticResource G600}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource G700}" />
                            <Setter Property="BorderBrush" Value="{StaticResource G700}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>